@page "/dashboards"
@using Microsoft.AspNetCore.Authorization
@using DiplomaThesis.Shared.Contracts
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize]
@inject HttpClient _http

<PageTitle>Dashboard</PageTitle>

<h1>Dashboard</h1>


<div class="d-flex flex-column">
    @if (_dashboards is null || _dashboards.Length == 0)
    {
        <div>
            <em>Ukázkový report</em>
            <iframe title="Ukázkový report"  
                    src="https://app.powerbi.com/view?r=eyJrIjoiNjlmMjA3OWQtZjgwOS00YmFmLThkNTMtNzY0YmM1N2YwZDg3IiwidCI6IjA2ZmZiNTU3LTRmMDYtNGQzOC1hNjM3LTRlNWRmZDc4N2RhMiIsImMiOjh9" 
                    style="border: 0;"
                    width="600" height="373.5" allow="fullscreen"></iframe>
        </div>
    }
    else
    {
        @foreach (var dashboard in _dashboards)
        {
            <div>
                <em>@dashboard.Name</em>
                <iframe title=@dashboard.Name 
                        src=@dashboard.EmbedUrl
                        style="border: 0;"
                        width="600" height="373.5" allow="fullscreen"></iframe>
            </div> 
        }
    }
</div>

@code {
    DashboardContract[]? _dashboards;
    
    protected override async Task OnInitializedAsync()
    {
        await UpdateData();
    }

    private async Task UpdateData()
    {
        var dashboards = await GetDashboardsFromBackend();

        if (dashboards is not null)
        {
            _dashboards = dashboards;
        }
        
        StateHasChanged();
    }
    
    private async Task<DashboardContract[]?> GetDashboardsFromBackend()
    {
        try
        {
            var response = await _http.GetFromJsonAsync<IEnumerable<DashboardContract>>($"Dashboard/ListDashboards");
            return response?.ToArray();
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
            return null;
        }
    }
}