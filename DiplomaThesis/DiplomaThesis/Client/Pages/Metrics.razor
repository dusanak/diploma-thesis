@page "/metrics"
@using Microsoft.AspNetCore.Authorization
@using DiplomaThesis.Shared.Contracts
@using DiplomaThesis.Client.Services.Interfaces

@inject IJSRuntime _js
@inject IReportService _reportService

@attribute [Authorize]

<PageTitle>Metrics</PageTitle>

<h1>Metrics</h1>

<div class="d-flex">
    @if (_reports is null || _reports.Length == 0)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
    else
    {
        <div class="flex-column">
            @foreach (var report in _reports)
            {
                <AuthorizeView Roles="Architect">
                    <button class="btn btn-outline-primary"
                            @onclick="() => SelectReport(report)">
                        Select
                    </button>
                </AuthorizeView>
                <ReportContainer Report="@report"/>
            }
        </div>
        
        <ReportMenu @ref="_reportMenu" OnReportChanged="UpdateData"/>
    }
</div>

@code {
    ReportMenu _reportMenu = null!;
    
    ReportContract[]? _reports;

    protected override async Task OnInitializedAsync()
    {
        await UpdateData();
        StateHasChanged();
    }

    private async Task UpdateData()
    {
        var reports = await _reportService.GetReportsFromBackend();

        if (reports is not null)
        {
            _reports = reports;
        }
            
        StateHasChanged();
    }

    private void SelectReport(ReportContract report)
    {
        _reportMenu.Report = report;
    }
}