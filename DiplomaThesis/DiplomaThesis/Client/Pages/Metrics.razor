@page "/metrics"
@using DiplomaThesis.Client.Services.Interfaces
@using DiplomaThesis.Shared.Contracts
@using Microsoft.AspNetCore.Authorization

@inject IReportService ReportService

@attribute [Authorize]

<PageTitle>Metrics</PageTitle>

<h1>Metrics</h1>

@if (_reports is null || _reports.Length == 0)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div class="row">
        @foreach (var report in _reports)
        {
            <div class="col m-4 report-element">
                <AuthorizeView Roles="Architect">
                    <button class="btn btn-outline-primary w-100"
                            @onclick="() => SelectReport(report)">
                        Select
                    </button>
                </AuthorizeView>
                <ReportContainer Report="@report"/>
            </div>
        }
    </div>

    <div>
        <ReportMenu @ref="_reportMenu" OnReportChanged="UpdateData"/>
    </div>
}

@code {
    ReportMenu _reportMenu = null!;

    ReportContract[]? _reports;

    protected override async Task OnInitializedAsync()
    {
        await UpdateData();
        StateHasChanged();
    }

    private async Task UpdateData()
    {
        var reports = await ReportService.GetReportsFromBackend();

        if (reports is not null)
        {
            _reports = reports;
        }

        StateHasChanged();
    }

    private void SelectReport(ReportContract report)
    {
        _reportMenu.Report = report;
    }

}