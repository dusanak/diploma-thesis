@using DiplomaThesis.Shared
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@implements IAsyncDisposable
@inject IJSRuntime _js
@inject HttpClient _http

<div>
    <em>Id: @Report?.Id Name: @Report?.Name</em>
    <div @ref="@_powerBiElement" style="height:400px"></div>
</div>

@code {
    [Parameter]
    public ReportContract? Report { get; set; }
    
    ElementReference _powerBiElement;
    IJSObjectReference? _embedModule;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            if (firstRender)
            {
                _embedModule = await _js.InvokeAsync<IJSObjectReference>("import", "./scripts/powerbi-embed.js");

                await UpdateEmbeddedReport();
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        await UpdateEmbeddedReport();
    }

    private async Task UpdateEmbeddedReport()
    {
        if (_embedModule is not null && Report is not null)
        {
            await _embedModule.InvokeVoidAsync("embedReport",
                _powerBiElement,
                Report.Id.ToString(),
                Report.EmbedUrl,
                Report.EmbedToken);
            
            StateHasChanged();
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (_embedModule is not null)
            await _embedModule.DisposeAsync();
    }
}